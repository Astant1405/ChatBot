version: '3.8'

services:
  service1:
    build: ./ChatBot2-Service1/service1
    container_name: service1
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ChatBot
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Astant_123698745!
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      YANDEX_REDIRECT_URI: http://host.docker.internal:8080/api/auth/yandex/callback
    command: ["/wait-for-it.sh", "kafka:9092", "--", "java", "-jar", "app.jar"]
    networks:
      - backend

  service2:
    build: ./ChatBot2-Service2/service2
    container_name: service2
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - ollama
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      OLLAMA_HOST: http://ollama:11434
    command: ["java", "-jar", "app.jar"]
    networks:
      - backend

  db:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: ChatBot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Astant_123698745!
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/init:/docker-entrypoint-initdb.d  # ← это важно
    networks:
      - backend


  kafka:
    image: bitnamilegacy/kafka:4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT

      KAFKA_KRAFT_CLUSTER_ID: "chatbot-cluster"
    volumes:
      - kafka-data:/bitnamilegacy/kafka
    networks:
      - backend


  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    networks:
      - backend


volumes:
  pgdata:
  kafka-data:
  ollama-data:

networks:
  backend:
